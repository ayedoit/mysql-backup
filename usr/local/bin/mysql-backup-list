#!/bin/bash
# List Backups

# load global config
source /etc/mysql-backup/mysql-backup-global.conf

date=`date +%Y-%m-%d_%H-%M`;
year=`date +%Y`;
month=`date +%m`;
day=`date +%d`;

BIN_date='/bin/date'
BIN_bc='/usr/bin/bc'
BIN_find='/usr/bin/find'
BIN_stat='/usr/bin/stat'
BIN_rm='/bin/rm'
BIN_mkdir='/bin/mkdir'
BIN_cp='/bin/cp'

if [[ $1 ]];
then
        servers=$1;
else
	echo "[$date] no server selected. Taking servers from existing config files."
	servers=`ls -A /etc/mysql-backup/hosts | awk -F'.' '{ print $1 }'`
fi

for server in $servers;
do
	echo
	echo "==========================================="
	length=$((43-${#server}))
	h_len=$(($length/2))
	i=0
	while [ $i -lt $h_len ]
        do
                echo -n " "
                i=$(( $i + 1 ))
        done
	echo $server
	echo -n "==========================================="
	# Get Config for the host
	server_conf=$configpath/$server".conf";
	if [ -a $server_conf ];
	then
	  	source $server_conf;
	else
  		echo "[$date] Config file for host '$server' not found. Exiting."
  		exit 1
	fi

	# First determine all existing backups of the host
	b_existing=`$BIN_find $storagepath -type d -name $hostname -and -not -path "*archive*"`

	divider===============================
	divider=$divider$divider

	header="\n %2s %18s %8s %4s %6s\n"
	format=" %2d %18s %8s %4s %6s\n"

	width=43

	printf "$header" "ID" "DATE" "DURATION" "SIZE" "FILES"

	printf "%$width.${width}s\n" "$divider"

	# Start Output

	d_ct=0
	for b_dir in $b_existing
	do
		# Raise dir count
		d_ct=$[$d_ct+1]

		# Determine size
		b_size=`grep "SIZE" $b_dir/.backup_meta | awk '{ print $2}'`

		# Determine duration
		time_start=`grep "START" $b_dir/.backup_meta | awk '{ print $2" "$3}'`
		ts_start=`date --utc --date "$time_start" +%s`

		time_end=`grep "END" $b_dir/.backup_meta | awk '{ print $2" " $3}'`
		ts_end=`date --utc --date "$time_end" +%s`

		t_diff=$((ts_end-ts_start))

		if [ $t_diff -ge 3600 ];
		then
			duration="$((t_diff/3600))h"
		elif [ $t_diff -ge 60 ];
		then
			duration="$((t_diff/60))m"
		else
			duration=$t_diff"s"
		fi

		# Files
		files=`grep "FILES" $b_dir/.backup_meta | awk '{ print $2}'`

		# Extract date of backup from directory
		printf "$format" $d_ct "$time_start" $duration $b_size $files

	done

	echo
	echo

	if [ $d_ct -eq 0 ];
	then
		echo "N/A"
	fi
done
